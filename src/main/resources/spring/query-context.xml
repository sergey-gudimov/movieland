<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="getAllMovieSQL" class="java.lang.String">
        <constructor-arg value="
        select
            m.id,
            m.name_russian,
            m.name_native,
            m.released_date,
            m.rating,
            m.price,
            m.picture_path
        from movieland.movie m;"/>
    </bean>

    <bean id="getRandomMovieSQL" class="java.lang.String">
        <constructor-arg value="
        select
            m.id,
            m.name_russian,
            m.name_native,
            m.released_date,
            m.rating,
            m.price,
            m.picture_path
        from movieland.movie m
        order by rand()
        limit 3;"/>
    </bean>

    <bean id="getMovieCountrySQL" class="java.lang.String">
        <constructor-arg value="
        select
            mc.country_id,
            c.name country_name,
            mc.movie_id
        from movieland.movie_country mc
        join movieland.country c on c.id = mc.country_id;"/>
    </bean>

    <bean id="getMovieGenreSQL" class="java.lang.String">
        <constructor-arg value="
        select
            mg.movie_id,
            g.name genre_name,
            mg.genre_id
        from movieland.genre g
        join movieland.movie_genre mg on mg.genre_id = g.id;"/>
    </bean>

    <bean id="getAllGenreSQL" class="java.lang.String">
        <constructor-arg value="
        select
            g.id,
            g.name
        from movieland.genre g;"/>
    </bean>

    <bean id="getMovieByGenreIdSQL" class="java.lang.String">
        <constructor-arg value="
       select
            m.id,
            m.name_russian,
            m.name_native,
            m.released_date,
            m.rating,
            m.price,
            m.picture_path
        from movieland.movie m
        join movieland.movie_genre mg on mg.movie_id = m.id
        where mg.genre_id = ? ;"/>
    </bean>

    <bean id="getGenreMaxIdSQL" class="java.lang.String">
        <constructor-arg value="
        select max(id) id
        from movieland.genre;"/>
    </bean>

    <bean id="getMovieMaxIdSQL" class="java.lang.String">
        <constructor-arg value="
        select max(id) id
        from movieland.movie;"/>
    </bean>

    <bean id="getMovieByIdSQL" class="java.lang.String">
        <constructor-arg value="
       select
            m.id,
            m.name_russian,
            m.name_native,
            m.released_date,
            m.plot description,
            m.rating,
            m.price,
            m.picture_path
        from movieland.movie m
        where m.id = ? ;"/>
    </bean>

    <bean id="getReviewByMovieIdSQL" class="java.lang.String">
        <constructor-arg value="
       select id, user_id, description, movie_id
        from movieland.review
        where movie_id = ? ;"/>
    </bean>

    <bean id="getUserMaxIdSQL" class="java.lang.String">
        <constructor-arg value="
        select max(id) id
        from movieland.user;"/>
    </bean>

    <bean id="getUserByIdSQL" class="java.lang.String">
        <constructor-arg value="
       select id, nickname
        from movieland.user
        where id = ?;"/>
    </bean>
</beans>